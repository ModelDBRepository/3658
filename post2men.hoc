objref MenuPOST
MenuPOST = new VBox()
MenuPOST.intercept(1)

Ampa_CO=GrCell[0].ampa1[0].ko
Ampa_OC= GrCell[0].ampa1[0].kc
Ampa_CD= GrCell[0].ampa1[0].kd
Ampa_DC= GrCell[0].ampa1[0].kr
Ampa_Kb= GrCell[0].ampa1[0].kb
Ampa_Gmax= GrCell[0].ampa1[0].gbarampa
RelProb= GrCell[0].ampa1[0].RelProb

xpanel("1")
	xlabel("AMPA DCO scheme")
	xvalue("CO (ms^-1)","Ampa_CO", 1,"UpDateAMPA()", 0, 0 )
	xvalue("OC (ms^-1)","Ampa_OC", 1,"UpDateAMPA()", 0, 0 )
	xvalue("CD (ms^-1)","Ampa_CD", 1,"UpDateAMPA()", 0, 0 )
	xvalue("DC (ms^-1)","Ampa_DC", 1,"UpDateAMPA()", 0, 0 )
	xvalue("Kb (mM)","Ampa_Kb", 1,"UpDateAMPA()", 0, 0 )
      xvalue("Gmax (pS)","Ampa_Gmax", 1,"UpDateAMPA()", 0, 0 )
      xvalue("Release probability","RelProb", 1,"UpDateAMPA()", 0, 0 )

	xpanel()

MenuPOST.intercept(0)
MenuPOST.map("Postsinaptic parameters")

proc UpDateAMPA(){
	for (i=0;i<=3;i=i+1) {
		GrCell[0].ampa1[0].ko=Ampa_CO
		GrCell[0].ampa1[0].kc=Ampa_OC
		GrCell[0].ampa1[0].kd=Ampa_CD
		GrCell[0].ampa1[0].kr=Ampa_DC
GrCell[0].ampa1[0].gbarampa=Ampa_Gmax
 GrCell[0].ampa1[0].kb=Ampa_Kb
GrCell[0].RelProb[0].kb=RelProb
}           
	}



